[tox]
min_version = 4.0
env_list =
    py310
    py39
    type

[pytest]
log_format = %(asctime)s %(levelname)s %(message)s
log_date_format = %Y-%m-%d %H:%M:%S
addopts =
    --cov=dnd_character_sheet --cov-report html --cov-report term-missing -rx

[coverage:run]
branch = True

[coverage:report]
; Regexes for lines to exclude from consideration
exclude_also =
    ; Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    ; Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    ; Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    ; Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True

[coverage:html]
directory = cov_html

[testenv]
description = "Top-level config to use tox with poetry"
allowlist_externals = poetry
commands_pre =
    poetry install --no-root --sync

[testenv:unit]
description = "Running unit tests only"
commands =
    poetry run pytest tests/ --import-mode importlib --cov=dnd_character_sheet

[testenv:type]
description = "Type-checking with mypy"
commands = poetry run mypy src

[testenv:format]
description = "Formatting code with black and ruff"
commands =
    poetry run ruff check src tests --fix
    poetry run black src tests

[testenv:cov-term]
description = "Showing current coverage stats in the terminal"
commands = coverage report -m

[testenv:release]
description = "Running all CI tools in check mode on the package"
commands =
    poetry run pytest tests/ --import-mode importlib
    poetry run mypy src
    poetry run ruff check src tests
    poetry run black src tests --check --diff --color
